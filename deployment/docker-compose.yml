# follows https://pentacent.medium.com/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71
version: '3'
services:
  api:
    build:
      context: ../backend
      dockerfile: Dockerfile
    depends_on:
      - db
    # uncomment for local testing
    # ports:
    #   - "8080:8080"
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=db
    volumes:
      - local_dynamic_storage:/home/storage
  background:
    build:
      context: ../backend
      dockerfile: Dockerfile.background
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=db
    volumes:
      - local_dynamic_storage:/home/storage
  web:
    build:
      context: ../web
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: /api
    depends_on:
      - api
  db:
    image: postgres:15.2-alpine
    restart: always
    # POSTGRES_USER and POSTGRES_PASSWORD should be set in .env file
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes: 
      - db:/var/lib/postgresql/data
  nginx:
    image: nginx:1.23.4-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: > 
      /bin/sh -c "envsubst '$$\{DOMAIN\}' < /etc/nginx/conf.d/app.conf.template > /etc/nginx/conf.d/app.conf 
      && while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\""
    env_file:
      - .env.nginx
    depends_on:
      - api
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
volumes:
  local_dynamic_storage:
  db:
